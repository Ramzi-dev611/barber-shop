apiVersion: apps/v1
kind: Deployment
metadata:
  name: barbershop-posts
  labels:
    app: posts
spec:
  strategy: 
    type: shadow
    shadow:
      source:
        deployment: barbershop-posts
  replicas: {{ .Values.authenticaion.posts.replicas }}
  selector:
    matchLabels:
      app: posts
  template:
    metadata:
      annotations:
        prometheus.io/port: {{ .Values.authentication.service.port }}
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
      labels:
        app: posts
    spec:
      containers:
      - name: posts-container
        image: ramzi611/barbershop-posts:latest
        ports:
        - containerPort: {{ .Values.posts.service.port }}
        env:
          - name: PRODUCTION
            value: true
          - name: DB_HOST
            value: {{ .Values.posts.deployment.DB_HOST}}
          - name: DB_PORT
            value: {{ .Values.posts.deployment.DB_PORT}}
          - name: DB_NAME
            value: {{ .Values.posts.deployment.DB_NAME}}
          - name: DB_USER
            value: {{ .Values.posts.deployment.DB_USER}}
          - name: DB_PASSWD
            value: {{ .Values.posts.deployment.DB_PASSWD}}